
=======EMBEDDER_ARCH=======
EmbedderNet(
  (backbone): EfficientNetModel(
    (embeddings): EfficientNetEmbeddings(
      (padding): ZeroPad2d((0, 1, 0, 1))
      (convolution): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=valid, bias=False)
      (batchnorm): BatchNorm2d(32, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
      (activation): SiLU()
    )
    (encoder): EfficientNetEncoder(
      (blocks): ModuleList(
        (0): EfficientNetBlock(
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((0, 1, 0, 1))
            (depthwise_conv): EfficientNetDepthwiseConv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=32, bias=False)
            (depthwise_norm): BatchNorm2d(32, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(32, 8, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(8, 32, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.0, inplace=False)
          )
        )
        (1): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((0, 1, 0, 1))
            (depthwise_conv): EfficientNetDepthwiseConv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=valid, groups=96, bias=False)
            (depthwise_norm): BatchNorm2d(96, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(96, 4, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(4, 96, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.0125, inplace=False)
          )
        )
        (2): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((0, 1, 0, 1))
            (depthwise_conv): EfficientNetDepthwiseConv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=144, bias=False)
            (depthwise_norm): BatchNorm2d(144, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.025, inplace=False)
          )
        )
        (3): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((1, 2, 1, 2))
            (depthwise_conv): EfficientNetDepthwiseConv2d(144, 144, kernel_size=(5, 5), stride=(2, 2), padding=valid, groups=144, bias=False)
            (depthwise_norm): BatchNorm2d(144, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(144, 6, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(6, 144, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(144, 40, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(40, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.037500000000000006, inplace=False)
          )
        )
        (4): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(240, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((1, 2, 1, 2))
            (depthwise_conv): EfficientNetDepthwiseConv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=same, groups=240, bias=False)
            (depthwise_norm): BatchNorm2d(240, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(240, 10, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(10, 240, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(40, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.05, inplace=False)
          )
        )
        (5): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(240, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((0, 1, 0, 1))
            (depthwise_conv): EfficientNetDepthwiseConv2d(240, 240, kernel_size=(3, 3), stride=(2, 2), padding=valid, groups=240, bias=False)
            (depthwise_norm): BatchNorm2d(240, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(240, 10, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(10, 240, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(80, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.0625, inplace=False)
          )
        )
        (6): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(480, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((0, 1, 0, 1))
            (depthwise_conv): EfficientNetDepthwiseConv2d(480, 480, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=480, bias=False)
            (depthwise_norm): BatchNorm2d(480, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(80, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.07500000000000001, inplace=False)
          )
        )
        (7): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(480, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((0, 1, 0, 1))
            (depthwise_conv): EfficientNetDepthwiseConv2d(480, 480, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=480, bias=False)
            (depthwise_norm): BatchNorm2d(480, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(80, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.08750000000000001, inplace=False)
          )
        )
        (8): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(480, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((1, 2, 1, 2))
            (depthwise_conv): EfficientNetDepthwiseConv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=same, groups=480, bias=False)
            (depthwise_norm): BatchNorm2d(480, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
        (9): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(672, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((1, 2, 1, 2))
            (depthwise_conv): EfficientNetDepthwiseConv2d(672, 672, kernel_size=(5, 5), stride=(1, 1), padding=same, groups=672, bias=False)
            (depthwise_norm): BatchNorm2d(672, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(672, 28, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(28, 672, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(672, 112, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.1125, inplace=False)
          )
        )
        (10): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(672, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((1, 2, 1, 2))
            (depthwise_conv): EfficientNetDepthwiseConv2d(672, 672, kernel_size=(5, 5), stride=(1, 1), padding=same, groups=672, bias=False)
            (depthwise_norm): BatchNorm2d(672, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(672, 28, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(28, 672, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(672, 112, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.125, inplace=False)
          )
        )
        (11): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(672, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((1, 2, 1, 2))
            (depthwise_conv): EfficientNetDepthwiseConv2d(672, 672, kernel_size=(5, 5), stride=(2, 2), padding=valid, groups=672, bias=False)
            (depthwise_norm): BatchNorm2d(672, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(672, 28, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(28, 672, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(672, 192, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(192, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.1375, inplace=False)
          )
        )
        (12): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(192, 1152, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(1152, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((1, 2, 1, 2))
            (depthwise_conv): EfficientNetDepthwiseConv2d(1152, 1152, kernel_size=(5, 5), stride=(1, 1), padding=same, groups=1152, bias=False)
            (depthwise_norm): BatchNorm2d(1152, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(1152, 48, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(48, 1152, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(1152, 192, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(192, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.15000000000000002, inplace=False)
          )
        )
        (13): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(192, 1152, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(1152, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((1, 2, 1, 2))
            (depthwise_conv): EfficientNetDepthwiseConv2d(1152, 1152, kernel_size=(5, 5), stride=(1, 1), padding=same, groups=1152, bias=False)
            (depthwise_norm): BatchNorm2d(1152, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(1152, 48, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(48, 1152, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(1152, 192, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(192, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.1625, inplace=False)
          )
        )
        (14): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(192, 1152, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(1152, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((1, 2, 1, 2))
            (depthwise_conv): EfficientNetDepthwiseConv2d(1152, 1152, kernel_size=(5, 5), stride=(1, 1), padding=same, groups=1152, bias=False)
            (depthwise_norm): BatchNorm2d(1152, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(1152, 48, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(48, 1152, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(1152, 192, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(192, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.17500000000000002, inplace=False)
          )
        )
        (15): EfficientNetBlock(
          (expansion): EfficientNetExpansionLayer(
            (expand_conv): Conv2d(192, 1152, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (expand_bn): BatchNorm2d(1152, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
            (expand_act): SiLU()
          )
          (depthwise_conv): EfficientNetDepthwiseLayer(
            (depthwise_conv_pad): ZeroPad2d((0, 1, 0, 1))
            (depthwise_conv): EfficientNetDepthwiseConv2d(1152, 1152, kernel_size=(3, 3), stride=(1, 1), padding=same, groups=1152, bias=False)
            (depthwise_norm): BatchNorm2d(1152, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (depthwise_act): SiLU()
          )
          (squeeze_excite): EfficientNetSqueezeExciteLayer(
            (squeeze): AdaptiveAvgPool2d(output_size=1)
            (reduce): Conv2d(1152, 48, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (expand): Conv2d(48, 1152, kernel_size=(1, 1), stride=(1, 1), padding=same)
            (act_reduce): SiLU()
            (act_expand): Sigmoid()
          )
          (projection): EfficientNetFinalBlockLayer(
            (project_conv): Conv2d(1152, 320, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
            (project_bn): BatchNorm2d(320, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
            (dropout): Dropout(p=0.1875, inplace=False)
          )
        )
      )
      (top_conv): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), padding=same, bias=False)
      (top_bn): BatchNorm2d(1280, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)
      (top_activation): SiLU()
    )
    (pooler): AvgPool2d(kernel_size=1280, stride=1280, padding=0)
  )
  (classifier): Sequential(
    (0): Dropout(p=0.05, inplace=False)
    (1): Linear(in_features=1280, out_features=512, bias=True)
  )
)
=======METRIC_ARCH=======
MetricNet(
  (head_): Linear(in_features=512, out_features=5749, bias=True)
)